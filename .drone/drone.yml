---
depends_on: null
kind: pipeline
name: check
steps:
- commands:
  - go test ./...
  depends_on: []
  entrypoint: null
  environment: {}
  image: golang:1.21.8
  name: test
  settings: {}
trigger:
  branch:
  - main
  event:
    include:
    - pull_request
    - push
type: docker
---
depends_on:
- check
image_pull_secrets:
- dockerconfigjson
kind: pipeline
name: build
steps:
- commands:
  - DOCKER_TAG=$(bash scripts/generate-tags.sh)
  - echo -n "$${DOCKER_TAG}" > .tag
  - if test "${DRONE_SOURCE_BRANCH}" = "main"; then echo -n "$${DOCKER_TAG},latest"
    > .tags; else echo -n "$${DOCKER_TAG}" > .tags; fi
  - tail -n +1 .tags
  depends_on: []
  entrypoint: null
  environment: {}
  image: golang:1.21.8
  name: generate tags
  settings: {}
- commands: []
  depends_on: []
  entrypoint: null
  environment: {}
  image: plugins/gcr
  name: 'influx2cortex: build and push'
  settings:
    build_args:
    - cmd=influx2cortex
    dockerfile: ./Dockerfile
    json_key:
      from_secret: gcr_admin
    mirror: https://mirror.gcr.io
    registry: us.gcr.io
    repo: kubernetes-dev/influx2cortex
trigger:
  branch:
  - main
  event:
    include:
    - pull_request
    - push
type: docker
---
depends_on:
- build
environment:
  DOCKERD_ROOTLESS_ROOTLESSKIT_FLAGS: -p 0.0.0.0:2376:2376/tcp
image_pull_secrets:
- dockerconfigjson
kind: pipeline
name: acceptance
services:
- command:
  - --tls=false
  - --host=tcp://0.0.0.0:2375
  - --registry-mirror=https://mirror.gcr.io
  entrypoint:
  - dockerd
  image: docker:dind
  name: docker
  privileged: true
  volumes:
  - name: dockersock
    path: /var/run
steps:
- commands:
  - DOCKER_TAG=$(bash scripts/generate-tags.sh)
  - echo -n "$${DOCKER_TAG}" > .tag
  - if test "${DRONE_SOURCE_BRANCH}" = "main"; then echo -n "$${DOCKER_TAG},latest"
    > .tags; else echo -n "$${DOCKER_TAG}" > .tags; fi
  - tail -n +1 .tags
  depends_on: []
  entrypoint: null
  environment: {}
  image: golang:1.21.8
  name: generate tags
  settings: {}
- commands:
  - export ACCEPTANCE_DOCKER_TAG=$(cat .tag)
  - echo $${ACCEPTANCE_DOCKER_TAG}
  - make acceptance-tests
  depends_on: []
  entrypoint: null
  environment:
    ACCEPTANCE_CI: "true"
    ACCEPTANCE_DOCKER_AUTH_PASSWORD:
      from_secret: gcr_admin
    ACCEPTANCE_DOCKER_AUTH_USERNAME: _json_key
    ACCEPTANCE_DOCKER_HOST: docker
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  image: golang:1.21.8
  name: acceptance
  settings: {}
  volumes:
  - name: dockersock
    path: /var/run
trigger:
  branch:
  - main
  event:
    include:
    - pull_request
    - push
type: docker
volumes:
- name: dockersock
  temp: {}
---
get:
  name: .dockerconfigjson
  path: secret/data/common/gcr
kind: secret
name: dockerconfigjson
---
get:
  name: pat
  path: infra/data/ci/github/grafanabot
kind: secret
name: gh_token
---
get:
  name: service-account
  path: infra/data/ci/gcr-admin
kind: secret
name: gcr_admin
---
get:
  name: token
  path: infra/data/ci/argo-workflows/trigger-service-account
kind: secret
name: argo_token
