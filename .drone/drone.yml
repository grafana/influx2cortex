---
depends_on: null
image_pull_secrets:
- dockerconfigjson
kind: pipeline
name: pr
steps:
- commands:
  - go test ./...
  image: golang:1.17
  name: test
  settings: {}
- commands:
  - scripts/build-drone-utilities.sh
  - go test -coverprofile=coverage.out ./...
  - .drone/coverage > coverage_report.out
  - scripts/generate-lint-report.sh
  - cat coverage_report.out > report.out
  - echo "" >> report.out
  - cat lint.out >> report.out
  - .drone/ghcomment -id "Go coverage report:" -bodyfile report.out
  environment:
    GRAFANABOT_PAT:
      from_secret: gh_token
  image: golangci/golangci-lint:v1.45
  name: coverage + lint
  settings: {}
- commands:
  - DOCKER_TAG=$(bash scripts/generate-tags.sh)
  - echo -n "$${DOCKER_TAG}" > .tag
  - if test "${DRONE_SOURCE_BRANCH}" = "main"; then echo -n "$${DOCKER_TAG},latest"
    > .tags; else echo -n "$${DOCKER_TAG}" > .tags; fi
  - tail -n +1 .tags
  image: golang:1.17
  name: generate tags
  settings: {}
- commands: []
  image: plugins/gcr
  name: build + push
  settings:
    json_key:
      from_secret: gcr_admin
    registry: us.gcr.io
    repo: kubernetes-dev/influx2cortex
trigger:
  event:
    include:
    - pull_request
type: docker
---
depends_on: null
image_pull_secrets:
- dockerconfigjson
kind: pipeline
name: main
steps:
- commands:
  - go test ./...
  image: golang:1.17
  name: test
  settings: {}
- commands:
  - DOCKER_TAG=$(bash scripts/generate-tags.sh)
  - echo -n "$${DOCKER_TAG}" > .tag
  - if test "${DRONE_SOURCE_BRANCH}" = "main"; then echo -n "$${DOCKER_TAG},latest"
    > .tags; else echo -n "$${DOCKER_TAG}" > .tags; fi
  - tail -n +1 .tags
  image: golang:1.17
  name: generate tags
  settings: {}
- commands: []
  image: plugins/gcr
  name: build + push
  settings:
    json_key:
      from_secret: gcr_admin
    registry: us.gcr.io
    repo: kubernetes-dev/influx2cortex
trigger:
  branch:
  - main
  event:
    include:
    - push
type: docker
---
depends_on:
- main
image_pull_secrets:
- dockerconfigjson
kind: pipeline
name: launch influx argo workflow
steps:
- commands:
  - '[ $(git rev-parse HEAD) = $(git rev-parse remotes/origin/main) ]'
  image: golang:1.17
  name: check is latest commit
  settings: {}
- commands:
  - DOCKER_TAG=$(bash scripts/generate-tags.sh)
  - echo -n "$${DOCKER_TAG}" > .tag
  - if test "${DRONE_SOURCE_BRANCH}" = "main"; then echo -n "$${DOCKER_TAG},latest"
    > .tags; else echo -n "$${DOCKER_TAG}" > .tags; fi
  - tail -n +1 .tags
  image: golang:1.17
  name: generate tags
  settings: {}
- commands: []
  image: us.gcr.io/kubernetes-dev/drone/plugins/argo-cli
  name: launch argo workflow
  settings:
    add_ci_labels: true
    command: 'submit --from workflowtemplate/influx-deploy --name influx-deploy-$(cat
      .tag) --parameter dockertag=$(cat .tag) --parameter commit=${DRONE_COMMIT} --parameter
      commit_author=${DRONE_COMMIT_AUTHOR} --parameter commit_link=${DRONE_COMMIT_LINK} '
    namespace: influx-cd
    token:
      from_secret: argo_token
trigger:
  branch:
  - main
  event:
    include:
    - push
  paths:
    exclude:
    - .drone/**
    - .gitignore
    - README.md
type: docker
---
get:
  name: .dockerconfigjson
  path: secret/data/common/gcr
kind: secret
name: dockerconfigjson
---
get:
  name: pat
  path: infra/data/ci/github/grafanabot
kind: secret
name: gh_token
---
get:
  name: service-account
  path: infra/data/ci/gcr-admin
kind: secret
name: gcr_admin
---
get:
  name: token
  path: infra/data/ci/argo-workflows/trigger-service-account
kind: secret
name: argo_token
---
kind: signature
hmac: 5decf4444fd44ab9286dbdd01dc4241bd5817d63aae97b12b6999e99fcef095f

...
