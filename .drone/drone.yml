---
image_pull_secrets:
- dockerconfigjson
kind: pipeline
name: build
steps:
- commands:
  - go test ./...
  image: golang:1.17
  name: test
  settings: {}
- commands:
  - go test -coverprofile=coverage.out ./...
  - go tool cover -func=coverage.out > coverage_report.raw
  - echo "Go coverage report:" > coverage_report.out
  - echo "| Source | Func | % |" >> coverage_report.out
  - echo "| ------ | ---- | - |" >> coverage_report.out
  - "cat coverage_report.raw | sed -E 's/\t+/ | /g' | sed -E 's/^/| /g' | sed -E 's/$/
    |/g' >> coverage_report.out"
  - bash scripts/comment-pr.sh "`cat coverage_report.out`"
  environment:
    GRAFANABOT_PAT:
      from_secret: gh_token
  image: us.gcr.io/kubernetes-dev/influx2cortex/drone-env:latest
  name: test coverage
  settings: {}
- commands:
  - DOCKER_TAG=$(bash scripts/generate-tags.sh)
  - if test "${DRONE_SOURCE_BRANCH}" = "master"; then echo -n "$${DOCKER_TAG},latest"
    > .tags; else echo -n "$${DOCKER_TAG}" > .tags; fi
  - tail -n +1 .tags
  image: golang:1.17
  name: generate tags
  settings: {}
- commands: []
  image: plugins/gcr
  name: build + push
  settings:
    json_key:
      from_secret: gcr_admin
    registry: us.gcr.io
    repo: kubernetes-dev/influx2cortex
trigger:
  branch:
  - main
  event:
    include:
    - pull_request
    - push
type: docker
---
get:
  name: .dockerconfigjson
  path: secret/data/common/gcr
kind: secret
name: dockerconfigjson
---
get:
  name: pat
  path: infra/data/ci/github/grafanabot
kind: secret
name: gh_token
---
get:
  name: service-account
  path: infra/data/ci/gcr-admin
kind: secret
name: gcr_admin
---
kind: signature
hmac: 8d54596e10a545adef36f0c38b0b12f8ddc1280203c5af35228bd3c92102b874

...
